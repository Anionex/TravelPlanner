web apis
1.get_accommodations(city,check_in_date,check_out_date,adults,currency=GLOBAL_CURRENCY,rooms=1.
AccommodationSearch(self,city:str)#少3个参数check in date,check out date,adults
2.get_attractions(city,query:str "must-visit attractions",language=GLOBAL_LANGUAGE,num=10)
AttractionSearch(self,city:str)#少一个参数query
3.get_restaurants(city,query:str "must-visit restaurants",language=GLOBAL_LANGUAGE,num=10)
RestaurantSearch(self,city:str)#少一个参数query
4.get_distance_matrix(origin,destination,mode,language=GLOBAL LANGUAGE)
GoogleDistanceMatrix(self,origin:str,destination:str,mode:str)#完全一致date格式也一样
5.get flights(origin,destination,date)
FlightSearch(departure_.city:str,destination_city:str,date:str)#完全一致date格式也一样

New tools to be added:
6.google search - 先不加， 先把其他的东西跑通
7.get recommend city - not needed?先没加，加了get state city
city search 我还没有， 暂时用get entity 来代替 - ok
todo要看一下notebook write是不是写入数据类型有限制，调整下 - 不用

1. 改prompt - ok
2. 改reactplanner

---

(9) GoogleSearch[Query]
Description: A google search tool for finding information on the web if you keep failing to find the information you need by other tools.
Parameters: 
Query: The query from user.
Example: GoogleSearch[Train from New York to Boston Price and Time] would return a list of search results about train from New York to Boston.

            # elif action_type == 'GoogleSearch':
            #     try:
            #         self.scratchpad = self.scratchpad.replace(to_string(self.current_data).strip().strip(),'Masked due to limited length. Make sure the data has been written in Notebook.')
            #         self.current_data = self.tools['googleSearch'].run(action_arg)
            #         self.current_observation = to_string(self.current_data).strip('\n').strip()
            #         self.scratchpad += self.current_observation
            #         self.__reset_record()
            #         self.json_log[-1]['state'] = f'Successful'
            #     except Exception as e:
            #         print(e)
            #         self.retry_record['googleSearch'] += 1
            #         self.current_observation = f'Illegal Google Search. Please try again.'
            #         self.scratchpad += f'Illegal Google Search. Please try again.'
            #         self.json_log[-1]['state'] = f'Illegal args. Other Error'